definitions:
  models.ErrorResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  models.Item:
    properties:
      price:
        type: string
      shortDescription:
        type: string
    type: object
  models.PointsErrorResponse:
    properties:
      message:
        type: string
    type: object
  models.PointsResponse:
    properties:
      points:
        type: integer
    type: object
  models.Receipt:
    properties:
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      purchaseDate:
        type: string
      purchaseTime:
        type: string
      retailer:
        type: string
      total:
        type: string
    type: object
  models.ReceiptInput:
    properties:
      items:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      purchaseDate:
        type: string
      purchaseTime:
        type: string
      retailer:
        type: string
      total:
        type: string
    type: object
info:
  contact: {}
paths:
  /receipts/{id}/points:
    get:
      consumes:
      - application/json
      description: Fetch the receipt by its ID and calculate the points based on predefined
        rules
      parameters:
      - description: Receipt ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Points calculated successfully
          schema:
            $ref: '#/definitions/models.PointsResponse'
        "400":
          description: Bad request, receipt ID is required or receipt not found
          schema:
            $ref: '#/definitions/models.PointsErrorResponse'
      summary: Get points11 for a receipt by ID
      tags:
      - receipts
  /receipts/process:
    post:
      consumes:
      - application/json
      description: Create a new receipt by providing the retailer, purchase date,
        time, items, and total amount
      parameters:
      - description: Receipt input data
        in: body
        name: receiptInput
        required: true
        schema:
          $ref: '#/definitions/models.ReceiptInput'
      produces:
      - application/json
      responses:
        "201":
          description: Receipt created successfully
          schema:
            $ref: '#/definitions/models.Receipt'
        "400":
          description: Bad request, invalid input
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new receipt
      tags:
      - receipts
swagger: "2.0"
